---
   - name: Check if interfaces admin status is up
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - "show interfaces terse {{ item.interface }}"
       waitfor:
         - "result[0]['rpc-reply']['interface-information']['physical-interface']['admin-status'] eq up"
       retries: 3
       interval: 3
     loop: "{{ underlay.neighbors }}"
     when: item.interface is defined
     ignore_errors: yes

   - name: Check if interfaces op status is up
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - "show interfaces terse {{ item.interface }}"
       waitfor:
         - "result[0]['rpc-reply']['interface-information']['physical-interface']['oper-status'] eq up"
       retries: 3
       interval: 3
     loop: "{{ underlay.neighbors }}"
     when: item.interface is defined
     ignore_errors: yes

# Needs PFE to work
#   - name: Check if lldp neighbors are the ones we expect, using xml
#     junos_command:
#      provider: "{{ connection_settings }}"
#      display: 'xml'
#      commands:
#       - show lldp neighbors interface "{{ item.interface }}"
#      waitfor:
#       - "result[0]['rpc-reply']['lldp-neighbors-information']['lldp-neighbor-information']['lldp-remote-system-name'] == {{ item.name }}"
#      retries: 3
#      interval: 3
#     loop: "{{ underlay.neighbors }}"
#     when: item.name is defined
#     ignore_errors: yes

   - name: Check if bgp peers state is Established
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - show bgp neighbor "{{ item.peer_ip }}"
       waitfor:
         - "result[0]['rpc-reply']['bgp-information']['bgp-peer']['peer-state'] eq 'Established'"
       retries: 10
       interval: 5
     loop: "{{ underlay.neighbors }}"
     when: item.peer_ip is defined
     ignore_errors: yes

   - name: Check if junos devices learnt some routes with BGP
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - show route receive-protocol bgp "{{ item.peer_ip }}" table inet.0"
       waitfor:
         - "result[0]['rpc-reply']['route-information']['route-table']['total-route-count'] gt 2"
       retries: 10
       interval: 5
     loop: "{{ underlay.neighbors }}"
     when: item.peer_ip is defined
     ignore_errors: yes

   - name: Check if junos devices learnt some routes with BGP... another way
     junos_command:
      provider: "{{ connection_settings }}"
      display: 'xml'
      commands:
       - show route protocol bgp {{item.local_ip}}/31
      waitfor:
       - "result[0].rpc-reply.route-information.route-table.rt.rt-entry.nh.to eq {{item.peer_ip}}"
       - "result[0].rpc-reply.route-information.route-table.rt.rt-entry.nh.via eq {{item.interface}}.0"
     loop: "{{ underlay.neighbors }}"
     when: item.peer_loopback is defined
     ignore_errors: yes

   - name: Check if junos devices can ping some dest
     juniper_junos_ping:
       provider: "{{ connection_settings }}"
       dest: "{{ item.peer_ip }}"
       source: "{{ item.local_ip }}"
       ttl: 1
       acceptable_percent_loss: 40
     loop: "{{ underlay.neighbors }}"
     when: (item.local_ip) is defined and (item.peer_loopback) is defined
     ignore_errors: yes

# ~/jsnapy/snapshots/127.0.0.1_snap_temp_show_bgp_neighbor.xml
# ~/jsnapy/snapshots/127.0.0.1_snap_temp_show_bgp_summary.xml
# One filename for all devices with same IP address does not permit to do an effective test with Vagrant
#
# Changes in /etc/jsnapy/jsnapy.cfg
# Snapshots are in ~/juniper/demo-lab/roles/check_bgp/jsnapy/snapshots/
# Testfiles are in ~/juniper/demo-lab/roles/check_bgp/jsnapy/testfiles
   - name: Execute JSNAPy snapcheck tests
     juniper_junos_jsnapy:
       provider: "{{ connection_settings }}"
       action: "snapcheck"
       dir: "./roles/check_bgp/jsnapy/testfiles"
       test_files: 
         - "test_bgp_states.yml"
         - "test_bgp_summary.yml"          
     register: snapcheck_result

   - name: Verify JSNAPy snapcheck results
     assert:
       that:
         - "snapcheck_result.passPercentage == 100"
       msg: "JSNAPy test on {{ inventory_hostname }} failed"

