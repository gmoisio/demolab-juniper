---
   - pause: seconds=30

   - name: Check if interfaces admin status is up
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - "show interfaces terse {{ item.interface }}"
       waitfor:
         - "result[0]['rpc-reply']['interface-information']['physical-interface']['admin-status'] eq up"
       retries: 3
       interval: 3
     with_items:
       - "{{ underlay.neighbors }}"
     when: item.interface is defined

   - name: Check if interfaces op status is up
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - "show interfaces terse {{ item.interface }}"
       waitfor:
         - "result[0]['rpc-reply']['interface-information']['physical-interface']['oper-status'] eq up"
       retries: 3
       interval: 3
     with_items:
       - "{{ underlay.neighbors }}"
     when: item.interface is defined

#   - name: Check if lldp neighbors are the ones we expect, using xml
#     junos_command:
#      provider: "{{ connection_settings }}"
#      display: 'xml'
#      commands:
#       - show lldp neighbors interface "{{ item.interface }}"
#      waitfor:
#       - "result[0]['rpc-reply']['lldp-neighbors-information']['lldp-neighbor-information']['lldp-remote-system-name'] == {{ item.name }}"
#      retries: 3
#      interval: 3
#     with_items:
#     - "{{ underlay.neighbors }}"
#     when: item.name is defined

   - name: Check if bgp peers state is Established
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - show bgp neighbor "{{ item.peer_ip }}"
       waitfor:
         - "result[0]['rpc-reply']['bgp-information']['bgp-peer']['peer-state'] eq 'Established'"
       retries: 3
       interval: 3
     with_items:
       - "{{ underlay.neighbors }}"
     when: item.peer_ip is defined

   - name: Check if junos devices learnt some routes with BGP
     junos_command:
       provider: "{{ connection_settings }}"
       display: 'xml'
       commands:
         - show route receive-protocol bgp "{{ item.peer_ip }}" table inet.0"
       waitfor:
         - "result[0]['rpc-reply']['route-information']['route-table']['total-route-count'] gt 2"
       retries: 3
       interval: 3
     with_items:
       - "{{ underlay.neighbors }}"
     when: item.peer_ip is defined

#   - name: Check if junos devices learnt some routes with BGP
#     junos_command:
#      provider: "{{ connection_settings }}"
#      display: 'xml'
#      commands:
#       - show route protocol bgp {{item.peer_loopback}}/32
#      waitfor:
#       - "result[0].rpc-reply.route-information.route-table.rt.rt-destination eq {{item.peer_loopback}}/32"
#     with_items:
#      - "{{ underlay.neighbors }}"
#     when: item.peer_loopback is defined

#   - name: Check if junos devices can ping some dest
#     junos_ping:
#       provider: "{{ connection_settings }}"
#       dest: "{{ item.peer_ip }}"
#       source: "{{ item.local_ip }}"
#       ttl: 1
#     with_items:
#     - "{{ underlay.neighbors }}"
#     when: (item.local_ip) is defined and (item.peer_loopback) is defined

